// Code generated by mockery v2.45.1. DO NOT EDIT.

package ws

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockConnection is an autogenerated mock type for the Connection type
type MockConnection struct {
	mock.Mock
}

// Read provides a mock function with given fields: _a0
func (_m *MockConnection) Read(_a0 context.Context) (Message, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Read")
	}

	var r0 Message
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (Message, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(context.Context) Message); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(Message)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Write provides a mock function with given fields: _a0, _a1
func (_m *MockConnection) Write(_a0 context.Context, _a1 Message) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, Message) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockConnection creates a new instance of MockConnection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConnection(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConnection {
	mock := &MockConnection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
